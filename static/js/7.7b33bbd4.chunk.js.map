{"version":3,"sources":["components/detailed-view/detailed-view.js","components/pages/details-page.js","components/error-view/error-view.js","hooks/http.hook.js","services/api-key.js","services/marvel-api-service.js","components/error-boundary/error-boundary.js","static/img/Avengers.png","static/img/Avengers_logo.png","components/app-banner/app-banner.js"],"names":["ItemDetailsView","item","type","name","thumbnail","pages","price","description","language","homepage","wiki","baseClassName","imageClassNames","className","Helmet","content","src","alt","href","to","DetailedView","props","id","useMarvelAPIService","process","setProcess","getCharacter","getSingleComics","clearError","useState","setItem","useEffect","getItemDetails","onItemLoaded","then","Component","flex","Error","setContent","DetailsPage","useParams","ErrorView","errorMessage","ErrorIcon","viewBox","y","x","xmlns","version","style","height","width","background","transformOrigin","transform","fill","d","attributeName","dur","repeatCount","keyTimes","values","begin","defaultProps","useHttp","request","useCallback","url","a","method","body","headers","fetch","response","ok","status","json","data","publicApiKey","_apiBase","_apiKeyBase","_apiUrls","getAllCharacters","offset","results","map","_transformCharacterData","toString","length","characterMainData","getCharacterByName","getAllComics","_transformComicsData","comicsMainData","getCharacterComics","character","noDescriptionMessage","path","extension","urls","comics","prices","pageCount","title","textObjects","_baseCharactersLimit","_baseCharactersOffset","_baseComicsLimit","ErrorBoundary","state","error","errorInfo","this","setState","message","children","AppBanner","avengers","logo"],"mappings":"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","file":"static/js/7.7b33bbd4.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport useMarvelAPIService from '../../services/marvel-api-service';\r\n\r\nimport ErrorView from '../error-view/error-view';\r\nimport Spinner from '../spinner/spinner';\r\n\r\nimport './detailed-view.scss';\r\n\r\n\r\nconst DetailedView = (props) => {\r\n    const {id, type} = props;\r\n\r\n    /* Initializing instances to communicate with Marvel API and work with 'loaded' and 'error' states */\r\n    const {process, setProcess, getCharacter, getSingleComics, clearError} = useMarvelAPIService();\r\n\r\n    /* Component states */\r\n    const [item, setItem] = useState(null);\r\n\r\n    /* Component logic */\r\n    useEffect(() => {\r\n        getItemDetails(id);\r\n    }, [id]);\r\n\r\n    const onItemLoaded = (item) => {\r\n        /**\r\n         * Saves comics/character data to state\r\n         * of this component.\r\n         */\r\n        setItem(item);\r\n    }\r\n\r\n    const getItemDetails = (id) => {\r\n        /**\r\n         * Gets data (object) from Marvel API on comics/character\r\n         * and saves it to the state of this component.\r\n         */\r\n        clearError();\r\n\r\n        if (type === \"comics\") {\r\n            getSingleComics(id)\r\n            .then(onItemLoaded)\r\n            .then(() => setProcess('success'));\r\n        }\r\n\r\n        if (type === \"characters\") {\r\n            getCharacter(id)\r\n            .then(onItemLoaded)\r\n            .then(() => setProcess('success'));\r\n        }\r\n    }\r\n\r\n    const setContent = (process, Component, item) => {\r\n        switch (process) {\r\n            case 'idle':\r\n                return <Spinner />;\r\n            case 'loading':\r\n                return <Spinner />;\r\n            case 'success':\r\n                return <Component type={type} item={item}/>;\r\n            case 'failure':\r\n                return <ErrorView flex=\"column\"/>\r\n            default:\r\n                throw new Error(\"Unexpected process state\");\r\n        }\r\n    }\r\n\r\n    const content = setContent(process, ItemDetailsView, item);\r\n\r\n    return (<>\r\n                {content}\r\n            </>);\r\n}\r\n\r\n\r\nconst ItemDetailsView = ({item, type}) => {\r\n    /**\r\n     * Returns element with comics/character details.\r\n     * If no comics/character chosen, returns null.\r\n     */\r\n    if (!item) {\r\n        return null;\r\n    }\r\n\r\n    const {name, thumbnail, pages, price, description, language, homepage, wiki} = item;\r\n\r\n    const baseClassName = \"item-info\";\r\n\r\n    /* Change styles for a \"not found\" image */\r\n    const imageNotFound = \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\";\r\n    let imageClassNames = `${baseClassName}__image`;\r\n    if (thumbnail === imageNotFound) {\r\n        imageClassNames += ` ${baseClassName}__image_fill`;\r\n    }\r\n    \r\n    return (\r\n        <div className={baseClassName}>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={`Marvel Wiki Portal - ${name} details`}\r\n                    />\r\n                <title>{`Marvel Wiki Portal - ${name}`}</title>\r\n            </Helmet>\r\n\r\n            <div className={imageClassNames}>\r\n                <img src={thumbnail} alt={`${name}`}/>\r\n            </div>\r\n\r\n            <div className={`${baseClassName}__main`}>\r\n                <h3 className={`${baseClassName}__title`}>{name}</h3>\r\n\r\n                <article className={`${baseClassName}__description`}>\r\n                    {description}\r\n                </article>\r\n\r\n                {\r\n                    type === \"comics\" ?\r\n                    <>\r\n                        <div className={`${baseClassName}__pages`}>{pages}</div>\r\n\r\n                        <div className={`${baseClassName}__lang`}>Language: {language}</div>\r\n\r\n                        <span className={`${baseClassName}__price`}>{price}</span>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <div className={`${baseClassName}__buttons`}>\r\n                        <a href={homepage} className=\"app-button app-button_main\">Homepage</a>\r\n                        <a href={wiki} className=\"app-button\">Wiki</a>\r\n                    </div>\r\n                    </>\r\n                }\r\n                \r\n            </div>\r\n\r\n            <div className={`${baseClassName}__links`}>\r\n                <Link \r\n                    to={type === \"comics\" ? '/marvel-wiki-portal/comics' : '/marvel-wiki-portal/characters'} \r\n                    className={`${baseClassName}__link`}>\r\n                        Back to all\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nDetailedView.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    type: PropTypes.oneOf(['comics', 'characters']).isRequired\r\n}\r\n\r\nexport default DetailedView;","import { useParams } from 'react-router-dom';\r\n\r\nimport AppBanner from '../app-banner/app-banner';\r\nimport DetailedView from '../detailed-view/detailed-view';\r\nimport ErrorBoundary from '../error-boundary/error-boundary';\r\n\r\nconst DetailsPage = () => {\r\n    let { id, type } = useParams();\r\n\r\n    return (\r\n        <>\r\n            <AppBanner/>\r\n            <ErrorBoundary>\r\n                <DetailedView id={+id} type={type} />\r\n            </ErrorBoundary>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DetailsPage;","import PropTypes from 'prop-types';\r\n\r\nimport './error-view.scss';\r\n\r\nconst ErrorView = ({process, errorMessage, flex}) => {\r\n    if (process !== \"failure\") {\r\n        return null;\r\n    }\r\n\r\n    let className;\r\n    switch(flex) {\r\n        case \"column\":\r\n            className = \"error-view error-view_columned\";\r\n            break;\r\n        case \"row\":\r\n            className = \"error-view error-view_rowed\";\r\n            break;\r\n        default:\r\n            className = \"error-view\";\r\n    }\r\n\r\n    return (\r\n        <div className={className}>\r\n            <ErrorIcon />\r\n            <p className=\"error-view__message\">{errorMessage}</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ErrorIcon = () => {\r\n    return (\r\n        <svg \r\n            viewBox=\"0 0 100 100\" \r\n            y=\"0\" \r\n            x=\"0\" \r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            version=\"1.1\" \r\n            style={{height: '150px', width: '150px', background: 'none'}} \r\n            width=\"150px\" \r\n            height=\"150px\">\r\n                <g className=\"ldl-scale\" \r\n                    style={{transformOrigin: '50% 50%', transform: 'scale(0.8, 0.8)'}}>\r\n                <g className=\"ldl-ani\">\r\n                <g className=\"ldl-layer\">\r\n                <g className=\"ldl-ani\" \r\n                    style={{transformOrigin: '50px 50px', transform: 'scale(0.91)'}}>\r\n                    <path fill=\"#e15b64\" d=\"M14.653 85.487c-3.138-1.806-4.167-6.008-2.198-9.12 8.401-13.282 18.34-25.329 29.177-36.099 10.916-10.864 22.708-20.49 34.913-29.273 2.772-1.995 6.57-1.344 8.557 1.485 1.928 2.744 1.471 6.578-1.06 8.732-11.111 9.456-21.591 19.558-30.95 30.517C43.876 62.5 35.786 74.12 29.248 86.488c-1.653 3.126-5.423 4.276-8.429 2.547l-6.166-3.548z\" style={{fill: 'rgb(159, 0, 19)'}}>\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" dur=\"2s\" repeatCount=\"indefinite\" keyTimes=\"0; 0.5; 1\" values=\"0.8 0.8; 1 1; 0.8 0.8\"></animateTransform>\r\n                    </path>\r\n                </g></g>\r\n                <g className=\"ldl-layer\">\r\n                <g className=\"ldl-ani\" \r\n                    style={{transformOrigin: '50px 50px', transform: 'scale(0.91)'}}>\r\n                    <path fill=\"#e15b64\" d=\"M78.739 82.438c-3.067 1.804-7.041.872-8.916-2.152-6.367-10.267-14.543-19.718-23.698-28.397-9.306-8.827-19.587-16.906-30.29-24.594a6.594 6.594 0 0 1-1.682-8.948l1.23-1.895a6.609 6.609 0 0 1 9.03-2.012c11.571 7.19 22.962 14.943 33.735 23.864 10.673 8.851 20.777 18.958 29.162 30.721 2.256 3.165 1.337 7.584-2.014 9.555l-6.557 3.858z\" style={{fill: 'rgb(159, 0, 19)'}}>\r\n                    <animateTransform attributeName=\"transform\" type=\"scale\" dur=\"2s\" begin=\"0.5s\" repeatCount=\"indefinite\" keyTimes=\"0; 0.5; 1\" values=\"1 1; 0.8 0.8; 1 1\"></animateTransform>\r\n                    </path>\r\n                </g></g>\r\n                </g></g>\r\n        </svg>\r\n    );\r\n}\r\n\r\nErrorView.propTypes = {\r\n    process: PropTypes.string,\r\n    errorMessage: PropTypes.string,\r\n    flex: PropTypes.oneOf(['column', 'row'])\r\n}\r\n\r\nErrorView.defaultProps = {\r\n    process: \"failure\",\r\n    errorMessage: \"Something went wrong. Please try again later\"\r\n}\r\n\r\nexport default ErrorView;","import {useState, useCallback} from 'react';\r\n\r\nconst useHttp = () => {\r\n    /**\r\n     * Custom hook for http-requests.\r\n     * Returns method to get data from url and to set corresponding 'process' state.\r\n     * Also returns state values and clearError method.\r\n     */\r\n    const [process, setProcess] = useState('idle');\r\n    \r\n    const request = useCallback( async (url, method=\"GET\", body=null, headers={'Content-type': 'application/json'}) => {\r\n        setProcess('loading');\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setProcess('failure');\r\n            throw(e);\r\n        }\r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => {\r\n        setProcess('loading');\r\n    }, []);\r\n\r\n    return {\r\n            process, \r\n            setProcess,\r\n            request, \r\n            clearError\r\n        };\r\n\r\n}\r\n\r\nexport default useHttp;","const publicApiKey = \"0cccfebfa143cbee173b3ff218a5afc4\";\r\n\r\nexport default publicApiKey;","import useHttp from '../hooks/http.hook';\r\n\r\nimport publicApiKey from './api-key';\r\n\r\nconst useMarvelAPIService = () => {\r\n    /**\r\n     * Custom hook to work with Marvel API.\r\n     * Returns methods for getting characters\r\n     * and returns corresponding state values.\r\n     * Based on custom 'useHttp' hook.\r\n     */\r\n    const {process, request, clearError, setProcess} = useHttp();\r\n\r\n    const _apiBase = \"https://gateway.marvel.com:443/v1/public\";\r\n    const _apiKeyBase = \"apikey=\";\r\n    const _baseCharactersOffset = 210; /* number of characters to pass from the begginnng of the list */\r\n    const _baseCharactersLimit = 9; /* characters per load */\r\n    const _baseComicsLimit = 4; /* comics per load */\r\n    const _apiUrls = {\r\n        allCharacters: `${_apiBase}/characters?`,\r\n        singleCharacter: `${_apiBase}/characters/`,\r\n        allComics: `${_apiBase}/comics?`,\r\n        singleComics: `${_apiBase}/comics/`,\r\n    }\r\n\r\n    const getAllCharacters = async (offset = _baseCharactersOffset) => {\r\n        /**\r\n         * Fetches data from Marvel API\r\n         * on all characters (limited in _baseCharactersLimit).\r\n         * Takes optional argument for characters offset (number).\r\n         * Returns array with all characters with data \r\n         * transformed for each character.\r\n         */\r\n        const response = await request(\r\n            _apiUrls.allCharacters \r\n            + `limit=${_baseCharactersLimit}&offset=${offset}&${_apiKeyBase}${publicApiKey}`\r\n        );\r\n        return response.data.results.map(_transformCharacterData);\r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        /**\r\n         * Fetches data from Marvel API\r\n         * on a character by its unique id.\r\n         * Throws error in case of invalid id.\r\n         * Returns JS-object with transformed data.\r\n         */\r\n        if (id.toString().length < 7) {\r\n            throw new Error('Invalid id of a character');\r\n        }\r\n        const response = await request(\r\n            _apiUrls.singleCharacter \r\n            + id \r\n            + \"?\" \r\n            + _apiKeyBase \r\n            + publicApiKey\r\n            );\r\n        const characterMainData = response.data.results[0];\r\n        return _transformCharacterData(characterMainData);\r\n    }\r\n\r\n    const getCharacterByName = async (name) => {\r\n        /**\r\n         * Fetches data from Marvel API\r\n         * on a character by their name.\r\n         * Returns JS-object with transformed data.\r\n         */\r\n        const response = await request(\r\n            _apiUrls.allCharacters \r\n            + `name=${name}` \r\n            + \"&\"\r\n            + _apiKeyBase \r\n            + publicApiKey\r\n            );\r\n        const characterMainData = response.data.results[0];\r\n        return _transformCharacterData(characterMainData);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        /**\r\n         * Fetches data from Marvel API\r\n         * on all comics (limited in _baseComicsLimit).\r\n         * Returns array with all comics with data \r\n         * transformed for each comics.\r\n         */\r\n        const response = await request(\r\n            _apiUrls.allComics \r\n            + `limit=${_baseComicsLimit}&offset=${offset}&${_apiKeyBase}${publicApiKey}`\r\n        );\r\n\r\n        return response.data.results.map(_transformComicsData);\r\n    }\r\n\r\n    const getSingleComics = async (id) => {\r\n        /**\r\n         * Fetches data from Marvel API\r\n         * on a comics by its unique id.\r\n         * Throws error in case of invalid id.\r\n         * Returns JS-object with transformed data.\r\n         */\r\n        const response = await request(\r\n            _apiUrls.singleComics \r\n            + id \r\n            + \"?\" \r\n            + _apiKeyBase \r\n            + publicApiKey\r\n            );\r\n        const comicsMainData = response.data.results[0];\r\n        return _transformComicsData(comicsMainData);\r\n    }\r\n\r\n    const getCharacterComics = async (id) => {\r\n        /**\r\n         * Fetches data from Marvel API\r\n         * on comics containig specific character by his unique id.\r\n         * Throws error in case of invalid id.\r\n         * Returns array with comics with transformed data\r\n         * on each comics.\r\n         */\r\n        if (id.toString().length < 7) {\r\n            throw new Error('Invalid id of a character');\r\n        }\r\n        const response = await request(\r\n            _apiUrls.singleCharacter \r\n            + id \r\n            + \"/comics?\" \r\n            + _apiKeyBase \r\n            + publicApiKey\r\n            );\r\n            \r\n        return response.data.results.map(_transformComicsData);\r\n    }\r\n\r\n    const _transformCharacterData = (character) => {\r\n        /**\r\n         * Receives character data object (formed by Marvel API) \r\n         * and returns object with transformed character data \r\n         */\r\n        if (!character) {\r\n            return null;\r\n        }\r\n\r\n        /* Validation of character description */\r\n        const noDescriptionMessage = `\r\n            Please visit Homepage or Wiki for detailed description of ${character.name}\r\n        `;\r\n        let description = character.description || noDescriptionMessage;\r\n\r\n        return {\r\n            id: character.id,\r\n            name: character.name,\r\n            description: description,\r\n            thumbnail: character.thumbnail.path + \".\" + character.thumbnail.extension,\r\n            homepage: character.urls[0].url,\r\n            wiki: character.urls[1].url\r\n        }\r\n    }\r\n\r\n    const _transformComicsData = (comics) => {\r\n        /**\r\n         * Receives comics data object (formed by Marvel API) \r\n         * and returns object with transformed data \r\n         */\r\n\r\n        /* Price validation */\r\n        const price = comics.prices[0].price ? `${comics.prices[0].price}$` : \"Price Not Available\";\r\n\r\n        /* Pages validation */\r\n        const pages = comics.pageCount ? `${comics.pageCount} pages` : \"Unknown number of pages\";\r\n\r\n        return {\r\n            id: comics.id,\r\n            name: comics.title,\r\n            description: comics.description || 'No description available',\r\n            price: price,\r\n            thumbnail: comics.thumbnail.path + \".\" + comics.thumbnail.extension,\r\n            pages: pages,\r\n            language: comics.textObjects.language || 'en-US'\r\n        }\r\n    }\r\n\r\n    return {\r\n        _baseCharactersLimit,\r\n        _baseCharactersOffset,\r\n        _baseComicsLimit,\r\n        process,\r\n        setProcess,\r\n        clearError, \r\n        getAllCharacters, \r\n        getCharacter,\r\n        getAllComics,\r\n        getSingleComics,\r\n        getCharacterComics,\r\n        getCharacterByName\r\n        };\r\n}\r\n\r\nexport default useMarvelAPIService;","import {Component} from 'react';\r\n\r\nimport ErrorView from '../error-view/error-view';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false,\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorView message=\"Something went wrong. Please try again later\" />\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/Avengers.c29e0ef0.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9b944f71.png\";","import './app-banner.scss';\r\n\r\nimport avengers from '../../static/img/Avengers.png';\r\nimport logo from '../../static/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"banner\">\r\n            <div className=\"banner__image\">\r\n                <img src={avengers} alt=\"Avengers\"/>\r\n            </div>\r\n\r\n            <div className=\"banner__text\">\r\n                <p>New comics every week!</p>\r\n                <p>Stay tuned!</p>\r\n            </div>\r\n\r\n            <div className=\"banner__image\">\r\n                <img src={logo} alt=\"Avengers Logo\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AppBanner;"],"sourceRoot":""}